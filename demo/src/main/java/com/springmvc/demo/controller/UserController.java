package com.springmvc.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.springmvc.demo.bo.User;
import com.springmvc.demo.bo.UserRepository;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/h2db") // This means URL's start with /h2db (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	//Index page
	@GetMapping("")
	public ModelAndView index(String message, Model model) {
		if(message != null) {
			 model.addAttribute("message", message);
		} else {
			 model.addAttribute("message", "");
		}
		 return new ModelAndView("h2dbindex2", "user", new User());
	}
	
//	@GetMapping("")
//	public String index() {
		// This returns a JSON or XML with the users
//		 model.addAttribute("message", message);
//		return "h2dbindex";
//	}
	
//	@GetMapping(path="/add") // Map ONLY GET Requests
//	public ModelAndView addNewUserDisplay () {
//		
//		return new ModelAndView("h2AddUser", "user", new User());
//	}
	
	@PostMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUserDB () {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		System.out.println("passage ok");
//		User n = new User();
//		n.setName(name);
//		n.setEmail(email);
//		userRepository.save(n);
		return "Saved";
	}

//	@GetMapping(path="/all")
//	public @ResponseBody Iterable<User> getAllUsers() {
//		// This returns a JSON or XML with the users
//		return userRepository.findAll();
//	}
	
	@RequestMapping(value = "/getAll")
	public @ResponseBody Iterable<User> getAllUsersAjax() {

//		AjaxResponseBody result = new AjaxResponseBody();

//		if (isValidSearchCriteria(search)) {
//			List<User> users = findByUserNameOrEmail(search.getUsername(), search.getEmail());
//
//			if (users.size() > 0) {
//				result.setCode("200");
//				result.setMsg("");
//				result.setResult(users);
//			} else {
//				result.setCode("204");
//				result.setMsg("No user!");
//			}
//
//		} else {
//			result.setCode("400");
//			result.setMsg("Search criteria is empty!");
//		}

		//AjaxResponseBody will be converted into json format and send back to the request.
		return userRepository.findAll();

	}
	
}